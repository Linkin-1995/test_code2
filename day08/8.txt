前情回顾

1. 聚合
   聚合筛选: having
   聚合去重: distinct
   聚合运算

2. 索引

   作用 : 提高查询效率

   缺点 : 占用空间, 影响写操作效率

   适用情况: 数据量大,经常查询

   create index [indexName] on tb(col);

   desc [tb]  --->  key
   show index from [tb]

   drop index [indexName] on [tb];

3. 外键约束

   constraint [外键名]
   foreign key (外键字段)
   references 主表(主键)
   [级联动作]

删除外键: alter table [tb] drop foreign key [外键名]

4. 表关系

   一对一   一对多

   多对多: 创建关系表   --> 衍生的属性

cookie:

同时连接多个表
(A left join B on A.id=B.a_id)
left join C on A.name=C.name

进阶练习

create table class(cid int primary key auto_increment,
                  caption char(4) not null);

create table teacher(tid int primary key auto_increment,
                    tname varchar(32) not null);

create table student(sid int primary key auto_increment,
                    sname varchar(32) not null,
                    gender enum('male','female','others') not null default 'male',
                    class_id int,
                    foreign key(class_id) references class(cid)
                    on update cascade
                    on delete cascade);

create table course(cid int primary key auto_increment,
                   cname varchar(16) not null,
                   teacher_id int,
                   foreign key(teacher_id) references teacher(tid)
                   on update cascade
                   on delete cascade);

create table score(sid int primary key auto_increment,
                  student_id int,
                  course_id int,
                  number int(3) not null,
                  foreign key(student_id) references student(sid)
                   on update cascade
                   on delete cascade,
                   foreign key(course_id) references course(cid)
                   on update cascade
                   on delete cascade);

insert into class(caption) values('三年二班'),('三年三班'),('三年一班');
insert into teacher(tname) values('波多老师'),('苍老师'),('小泽老师');
insert into student(sname,gender,class_id) values('钢蛋','female',1),('铁锤','female',1),('山炮','male',2),('彪哥','male',3);
insert into course(cname,teacher_id) values('生物',1),('体育',1),('物理',2);
insert into score(student_id,course_id,number) values(1,1,60),(1,2,59),(2,2,100),(3,2,78),(4,3,66);

1. 查询每位老师教授的课程数量
2. 查询学生的信息及学生所在班级信息
3. 查询各科成绩最高和最低的分数,形式 : 课程ID  最高分  最低分
4. 查询平均成绩大于85分的所有学生学号,姓名和平均成绩
5. 查询课程编号为2且课程成绩在80以上的学生学号和姓名
6. 查询各个课程及相应的选修人数

练习: 写一个函数,传入两个同学的姓名,
返回这两个同学的分数只差


作业 : 1.  数据库语句分类整理
      2. 编写一个存储过程,传入一个学生姓名
      通过外部变量获取学生的成绩


