前情回顾

1. IO多路复用

   poll

      p = poll()
      p.register()
      p.unregister()
      p.poll()

   epoll

   三种IO多路复用方法对比

2. HTTP协议

   什么是HTTP协议

       应用层  tcp传输   简单,易用,无状态

   网页的获取过程


   请求格式: 请求行 请求头 空行  请求体

            请求行: GET  \XXX   HTTP/1.1

   响应格式: 响应行 响应头 空行  响应体

            响应行: HTTP/1.1  200  OK

            响应体: 具体的数据内容 text/html

3. webserver

   * 类的设计思想

       1. 站在使用角度,确定用户怎么用
       2. 确定什么是能够替用户完成的,什么是用户自己
          决定的,利用参数传入
       3. 确定类的实现步骤,分方法调用


网络并发编程 (核心编程)

1. 网络编程
   * 网络基础支持
       tcp/ip  osi  三次握手四次挥手  tcp对比udp
       ip  端口  网络传输大体流程

   * tcp套接字编程
   * udp套接字编程

2. 进程线程

   * 什么是进程
      进程概念  进程状态  孤儿僵尸定义
      进程线程的对比    并发并行  如何使用cpu

   * 能够使用Python创建进程 mutiprocessing
      自定义进程类   进程池   进程执行现象理解

   * 能够使用Python创建线程 threading
      同步互斥,基本的同步互斥方法
      python的GIL问题

3. IO问题和HTTP

   * IO模型分类 : 阻塞  非阻塞  IO多路复用
   * IO密集和计算密集,各自的特点
   * HTTP协议的格式

4. 网络并发模型
   * 多任务并发
   * IO多路复用并发模型

5. 综合案例
   * 聊天室
   * ftp文件服务
   * webserver

简历 : 熟练使用python进行网络编程和多任务编程

作业 : 1. webserver 自己写一下
       2. 聊天室 传到自己的github

